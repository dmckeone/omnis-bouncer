name: Tests

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  ui:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ui

    strategy:
      matrix:
        os: [ ubuntu-latest ]

    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 10
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: 'pnpm'
          cache-dependency-path: 'ui/pnpm-lock.yaml'

      - name: Install dependencies
        run: pnpm install

      - name: UI Lint
        run: pnpm run lint-ci

      - name: UI Format
        run: pnpm run format-ci

      - name: UI Test
        run: pnpm run test

      - name: UI Build
        run: pnpm run build

      - uses: actions/upload-artifact@v4
        with:
          name: ui-dist
          path: ui/dist

  server-format:
    needs: ui
    strategy:
      matrix:
        os: [ ubuntu-latest ]

    runs-on: ${{ matrix.os }}

    env:
      CARGO_TERM_COLOR: always

    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false

      - uses: actions/download-artifact@v5
        with:
          name: ui-dist
          path: ui/dist

      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt

      - uses: Swatinem/rust-cache@v2

      - name: Build Release
        run: cargo build --verbose
        env:
          OMNIS_BOUNCER_BUILD_UI: 0

      - name: Lint
        run: cargo clippy --all -- -D warnings

      - name: Code Format
        run: cargo fmt --all -- --check

  server-test:
    needs: ui
    strategy:
      matrix:
        redis: [ redis:8, valkey/valkey:8 ]

    runs-on: ubuntu-latest

    env:
      CARGO_TERM_COLOR: always

    services:
      redis:
        image: ${{ matrix.redis }}
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false

      - uses: actions/download-artifact@v5
        with:
          name: ui-dist
          path: ui/dist

      - uses: dtolnay/rust-toolchain@stable

      - uses: Swatinem/rust-cache@v2

      - name: Build Release
        run: cargo build --profile test --verbose
        env:
          OMNIS_BOUNCER_BUILD_UI: 0

      - name: Run Tests
        run: cargo test --profile test --verbose
        env:
          TEST_REDIS_URI: redis://127.0.0.1:6379/0
          OMNIS_BOUNCER_BUILD_UI: 0


  server-build:
    needs: ui
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]

    runs-on: ${{ matrix.os }}

    env:
      CARGO_TERM_COLOR: always

    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false

      - uses: actions/download-artifact@v5
        with:
          name: ui-dist
          path: ui/dist

      - uses: dtolnay/rust-toolchain@stable

      - uses: Swatinem/rust-cache@v2

      - name: Build Release
        run: cargo build --release --verbose
        env:
          OMNIS_BOUNCER_BUILD_UI: 0